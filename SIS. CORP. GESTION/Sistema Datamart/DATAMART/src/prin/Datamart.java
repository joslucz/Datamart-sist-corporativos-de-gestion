/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prin;

import conectar.Conectar;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Usuario
 */
public class Datamart extends javax.swing.JFrame {

    Conectar conex1 = new Conectar();
    Connection conect;
    DefaultTableModel modelo;
    Statement st;
    ResultSet rs;

    public Datamart() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Datos = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbMes = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtServicio = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cbAnio = new javax.swing.JComboBox<>();
        btnConsGeneral = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(153, 153, 255));
        jLabel1.setFont(new java.awt.Font("DialogInput", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Empresa de mudanza: Nivel de satisfacción del servicio");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        Datos.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 51)));

        jLabel2.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel2.setText("MES");

        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        jLabel3.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel3.setText("TIPO DE SERVICIO");

        btnAceptar.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        jLabel4.setText("AÑO");

        cbAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2017", "2018", "2019" }));
        cbAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAnioActionPerformed(evt);
            }
        });

        btnConsGeneral.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        btnConsGeneral.setText("Consulta General");
        btnConsGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsGeneralActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DatosLayout = new javax.swing.GroupLayout(Datos);
        Datos.setLayout(DatosLayout);
        DatosLayout.setHorizontalGroup(
            DatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(DatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DatosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DatosLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtServicio, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnConsGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        DatosLayout.setVerticalGroup(
            DatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DatosLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(DatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(DatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtServicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAceptar)
                    .addComponent(btnConsGeneral))
                .addGap(17, 17, 17))
        );

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        tabla.setBorder(new javax.swing.border.MatteBorder(null));
        tabla.setFont(new java.awt.Font("DialogInput", 1, 14)); // NOI18N
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ANIO", "MES", "TIPO_SERVICIO", "CONTEO", "HECHO"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Datos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(Datos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAnioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAnioActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        limpiartabla();
        if (txtServicio.getText().isEmpty() && cbMes.getSelectedItem().equals("ALL")) {
            consultar2();
        } 
        if (cbMes.getSelectedItem().equals("ALL")) {
            consultar3();
        }
        if (txtServicio.getText().isEmpty()) {
            consultar4();
        }
        else {
            //consultar5();
        }
        reporte();
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnConsGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsGeneralActionPerformed
        // TODO add your handling code here:
        limpiartabla();
        consultar();
        reporte();
    }//GEN-LAST:event_btnConsGeneralActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Datamart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Datamart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Datamart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Datamart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Datamart().setVisible(true);
            }
        });
    }

    void consultar() {


        String sql = "SELECT dim_tiempo.ANIO, dim_tiempo.MES, dim_servicio.TIPO_SERVICIO, hecho.HECHO, count(hecho.HECHO) as CONTEO"
                + " FROM data_mudanza.hecho"
                + " INNER JOIN data_mudanza.dim_tiempo ON hecho.FECHA = dim_tiempo.FECHA"
                + " INNER JOIN data_mudanza.dim_servicio ON hecho.ID_SERVICIO = dim_servicio.ID_SERVICIO"
                + " GROUP BY hecho.HECHO";

        try {
            conect = conex1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            Object[] thecho = new Object[5];
            modelo = (DefaultTableModel) tabla.getModel();
            while (rs.next()) {
                thecho[0] = rs.getInt("ANIO");
                thecho[1] = rs.getInt("MES");
                thecho[2] = rs.getString("TIPO_SERVICIO");
                thecho[3] = rs.getInt("CONTEO");
                thecho[4] = rs.getString("HECHO");

                modelo.addRow(thecho);
            }
            tabla.setModel(modelo);

        } catch (Exception e) {
        }
    }

    void consultar2() {

        String anio = (String) cbAnio.getSelectedItem();
        String sql = "SELECT dim_tiempo.ANIO, dim_tiempo.MES, dim_servicio.TIPO_SERVICIO, hecho.HECHO, count(hecho.HECHO) as CONTEO"
                + " FROM data_mudanza.hecho"
                + " INNER JOIN data_mudanza.dim_tiempo ON hecho.FECHA = dim_tiempo.FECHA"
                + " INNER JOIN data_mudanza.dim_servicio ON hecho.ID_SERVICIO = dim_servicio.ID_SERVICIO"
                + " WHERE dim_tiempo.ANIO = '"+ anio +"'"
                + " GROUP BY hecho.HECHO";

        try {
            conect = conex1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            Object[] thecho = new Object[5];
            modelo = (DefaultTableModel) tabla.getModel();
            while (rs.next()) {
                thecho[0] = rs.getInt("ANIO");
                thecho[1] = rs.getInt("MES");
                thecho[2] = rs.getString("TIPO_SERVICIO");
                thecho[3] = rs.getInt("CONTEO");
                thecho[4] = rs.getString("HECHO");

                modelo.addRow(thecho);
            }
            tabla.setModel(modelo);

        } catch (Exception e) {
        }
    }
    
    void consultar3() {

        String tservicio = txtServicio.getText();
        String anio = (String) cbAnio.getSelectedItem();
        String sql = "SELECT dim_tiempo.ANIO, dim_tiempo.MES, dim_servicio.TIPO_SERVICIO, hecho.HECHO, count(hecho.HECHO) as CONTEO"
                + " FROM data_mudanza.hecho"
                + " INNER JOIN data_mudanza.dim_tiempo ON hecho.FECHA = dim_tiempo.FECHA"
                + " INNER JOIN data_mudanza.dim_servicio ON hecho.ID_SERVICIO = dim_servicio.ID_SERVICIO"
                + " WHERE dim_tiempo.ANIO = '"+ anio +"'"
                + " AND dim_servicio.TIPO_SERVICIO like '%"+ tservicio +"%'"
                + " GROUP BY hecho.HECHO";

        try {
            conect = conex1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            Object[] thecho = new Object[5];
            modelo = (DefaultTableModel) tabla.getModel();
            while (rs.next()) {
                thecho[0] = rs.getInt("ANIO");
                thecho[1] = rs.getInt("MES");
                thecho[2] = rs.getString("TIPO_SERVICIO");
                thecho[3] = rs.getInt("CONTEO");
                thecho[4] = rs.getString("HECHO");

                modelo.addRow(thecho);
            }
            tabla.setModel(modelo);

        } catch (Exception e) {
        }
    }
    
    void consultar4() {

        String mes = (String) cbMes.getSelectedItem();
        String anio = (String) cbAnio.getSelectedItem();
        String sql = "SELECT dim_tiempo.ANIO, dim_tiempo.MES, dim_servicio.TIPO_SERVICIO, hecho.HECHO, count(hecho.HECHO) as CONTEO"
                + " FROM data_mudanza.hecho"
                + " INNER JOIN data_mudanza.dim_tiempo ON hecho.FECHA = dim_tiempo.FECHA"
                + " INNER JOIN data_mudanza.dim_servicio ON hecho.ID_SERVICIO = dim_servicio.ID_SERVICIO"
                + " WHERE dim_tiempo.ANIO = '"+ anio +"'"
                + " AND dim_tiempo.MES = '"+ mes +"'"
                + " GROUP BY hecho.HECHO";

        try {
            conect = conex1.getConnection();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            Object[] thecho = new Object[5];
            modelo = (DefaultTableModel) tabla.getModel();
            while (rs.next()) {
                thecho[0] = rs.getInt("ANIO");
                thecho[1] = rs.getInt("MES");
                thecho[2] = rs.getString("TIPO_SERVICIO");
                thecho[3] = rs.getInt("CONTEO");
                thecho[4] = rs.getString("HECHO");

                modelo.addRow(thecho);
            }
            tabla.setModel(modelo);

        } catch (Exception e) {
        }
    }
    
    public void reporte() {
        DefaultPieDataset dtsc = new DefaultPieDataset();
        for (int i = 0; i < tabla.getRowCount(); i++) {

            dtsc.setValue(tabla.getValueAt(i, 4).toString(), Integer.parseInt(tabla.getValueAt(i, 3).toString()));
            JFreeChart ch = ChartFactory.createPieChart3D("NIVEL DE SATISFACCIÓN", dtsc, true, true, false);
            PiePlot plot = (PiePlot) ch.getPlot();
            plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0}({1})/{2}"));
            ChartPanel cp = new ChartPanel(ch);
            JFrame Ventana = new JFrame("DATAMART");
            Ventana.getContentPane().add(cp);
            Ventana.pack();
            Ventana.setVisible(true);           

        }
    }

    public void limpiartabla() {
        DefaultTableModel temp = (DefaultTableModel) tabla.getModel();
        int filas = tabla.getRowCount();
        for (int a = 0; filas > a; a++) {
            temp.removeRow(0);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Datos;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnConsGeneral;
    private javax.swing.JComboBox<String> cbAnio;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtServicio;
    // End of variables declaration//GEN-END:variables
}
